---

- shell: cd /tmp ;wget http://repo.zabbix.com/zabbix/3.4/ubuntu/pool/main/z/zabbix-release/zabbix-release_3.4-1+xenial_all.deb && dpkg -i zabbix-release_3.4-1+xenial_all.deb

- name: apt install required packages
  apt:
    update_cache: yes
    name: [ 'vim', 'xfsprogs', 'python2.7-dev', 'python-pip', 'htop', 'lsof', 'bwm-ng', 'python-simplejson', 'zabbix-agent', 'zabbix-get', 'zabbix-sender']
    state: present

- group:
    name: mongodb
    state: present

- user:
    name: mongodb
    group: mongodb
    createhome: no
    state: present

- name: set local
  locale_gen: name=zh_CN.UTF-8 state=present

- file: path={{item}} state=directory mode=0755
  with_items:
    - /opt
    - /root/.pip/
    - /opt/app/conf/caddy

- name: put pip conf
  copy: src=pip.conf dest=/root/.pip/pip.conf

- name: put requirements
  copy: src=requirements.txt dest=/tmp/requirements.txt

- name: pip install requirements
  pip: requirements=/tmp/requirements.txt executable=pip

- name: put bashrc
  copy: src=bashrc.sh dest=/root/.bashrc

- get_url:
    url: https://fastdl.mongodb.org/linux/{{item.mongodb_version}}.tgz
    dest: /tmp/{{item.mongodb_version}}.tgz
    checksum: sha256:{{item.mongodb_sha}}
  with_items:
    - {mongodb_version: "{{mongodb_version_32}}",mongodb_sha: "{{mongodb_sha_32}}"}
    - {mongodb_version: "{{mongodb_version_34}}",mongodb_sha: "{{mongodb_sha_34}}"}
    - {mongodb_version: "{{mongodb_version_36}}",mongodb_sha: "{{mongodb_sha_36}}"}
    - {mongodb_version: "{{mongodb_version_40}}",mongodb_sha: "{{mongodb_sha_40}}"}

- get_url:
    url: http://appcenter-docs.qingcloud.com/developer-guide/scripts/app-agent-linux-amd64.tar.gz
    dest: /tmp/app-agent-linux-amd64.tar.gz

- name: Prepare service directories for Mongodb
  file:
    path: "/opt/{{ item }}"
    owner: root
    group: root
    state: directory
  with_items:
    - "{{mongo_dir_32}}"
    - "{{mongo_dir_34}}"
    - "{{mongo_dir_36}}"
    - "app/bin"
    - "mongodb"

- unarchive:
    src: /tmp/{{item.mongodb_version}}.tgz
    dest: /opt/{{ item.mongodb_dir }}
    remote_src: True
    creates: "/opt/{{item.mongodb_dir}}/bin"
    extra_opts: [ '--strip-components=1' ]
  with_items:
  - {mongodb_version: "{{mongodb_version_32}}",mongodb_dir: "{{mongo_dir_32}}"}
  - {mongodb_version: "{{mongodb_version_34}}",mongodb_dir: "{{mongo_dir_34}}"}
  - {mongodb_version: "{{mongodb_version_36}}",mongodb_dir: "{{mongo_dir_36}}"}
  - {mongodb_version: "{{mongodb_version_40}}",mongodb_dir: "mongodb"}


- unarchive:
    src: /tmp/app-agent-linux-amd64.tar.gz
    dest: /tmp/
    remote_src: True
    creates:


- shell: /tmp/app-agent-linux-amd64/install.sh
  become: true
  become_user: root
  args:
    chdir: /tmp/app-agent-linux-amd64/
    creates: /opt/qingcloud/app-agent

- copy: src=limits.conf dest=/etc/security/limits.conf

- copy: src=sysctl.conf dest=/etc/sysctl.conf

- copy: src=mongodb.key dest=/etc/mongodb.key mode=0400 owner=mongodb group=mongodb

- copy: src=etc/logrotate.d/logrotate-mongod.conf  dest=/etc/logrotate.d/logrotate-mongod.conf

- copy: src={{ item }} dest=/opt/app/bin/{{ item }} mode=0777
  with_items:
    - MongoTrib.py
    - restart-mongod-server.sh
    - restart-caddy.sh
    - start-mongod-server.sh
    - stop-mongod-server.sh
    - Upgrade.py
    - Fix.py
    - zabbix.sh

- copy: src={{ item }} dest=/etc/confd/{{ item }}
  with_items:
    - templates/
    - conf.d/

- name: Add the Service Group
  group:
    name: svc
    state: present

- name: Add the Service User - {{ parentRole }}
  user:
    name: caddy
    groups: svc
    shell: /sbin/nologin
    create_home: no
    home: "/opt/caddy/current"
    append: yes
    comment: "Service User"
    state: present

- name: Prepare service directories for Caddy
  file:
    path: "{{ item }}"
    owner: caddy
    group: svc
    state: directory
  with_items:
    - "/opt/caddy"
    - "/opt/caddy/{{ caddy_version }}"

- name: download binary for Caddy
  get_url:
    url: https://github.com/mholt/caddy/releases/download/v{{ caddy_version }}/caddy_v{{ caddy_version }}_linux_amd64.tar.gz
    dest: tmp/caddy_v{{ caddy_version }}_linux_amd64.tar.gz
  delegate_to: localhost

- name: Extract binary for Caddy
  unarchive:
    copy: yes
    src: tmp/caddy_v{{ caddy_version }}_linux_amd64.tar.gz
    dest: /opt/caddy/{{ caddy_version }}
    creates: /opt/caddy/{{ caddy_version }}/caddy
    owner: caddy
    group: svc

- name: Create symbolic link for Caddy
  file:
    src: "/opt/caddy/{{ caddy_version }}"
    dest: "/opt/caddy/current"
    owner: caddy
    group: svc
    state: link
    force: yes

- name: Copy SystemD files
  vars:
    src: "roles/common/files/etc/systemd/system/"
  copy:
    src: "{{ src }}"
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: u=rw,go=r
  when: src is directory

- name: Copy zabbix files
  copy:
    src: roles/common/files/etc/zabbix/zabbix_agentd.d/zabbix_mongodb.conf
    dest: /etc/zabbix/zabbix_agentd.d/zabbix_mongodb.conf

- raw: |
     >~/.bash_history && history -c

