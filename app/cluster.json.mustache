{
   "name":{{cluster.name}},
   "description":{{cluster.description}},
   "vxnet":{{cluster.vxnet}},
   "backup_policy": "device",
   "incremental_backup_supported": true,
   "multi_zone_policy": "round_robin",
   "advanced_actions": ["change_vxnet", "scale_horizontal"],
   "upgrade_policy": [
        "appv-cu0tiqmz"
    ],
   "upgrading_policy": "in-place-sequential",
   "in-place-upgrade-nodes": [{
     "container":{
       "snapshot": "ss-nurdkknt",
       "zone": "pek3"
     },
     "copy":[{
       "mount_role": "replica",
       "mount_point": "/upgrade",
       "mount_options": "defaults,noatime",
       "filesystem": "ext4"
     }]
   }],
   "nodes":[
      {
         "role":"replica",
         "container":{
            "type":"kvm",
            "zone":"pek3",
            "image":"img-de676tm7"
         },
         "instance_class":{{cluster.replica.instance_class}},
         "count":{{cluster.replica.count}},
         "cpu":{{cluster.replica.cpu}},
         "memory":{{cluster.replica.memory}},
         "volume":{
            "size":{{cluster.replica.volume_size}},
            "class":{{cluster.replica.volume_class}},
            "mount_point":"/data",
            "filesystem":"ext4"
         },
         "passphraseless":"ssh-rsa",
         "vertical_scaling_policy":"sequential",
         "services":{
            "backup": {
               "nodes_to_execute_on": 1,
               "order": 1
            },
            "init":{
               "post_start_service":true,
               "order":1,
               "cmd":"/opt/app/bin/MongoTrib.py init"
            },
            "start":{
               "cmd":"mkdir -p /data/mongodb /data/info /data/logs /data/caddy/logs /data/zabbix-agent/logs;chown caddy:svc /data/caddy/logs;/opt/app/bin/start-mongod-server.sh && /opt/app/bin/zabbix.sh start"
            },
            "stop":{
               "cmd":"systemctl stop zabbix-agent;/opt/app/bin/stop-mongod-server.sh"
            },
            "restart":{
               "cmd":"/opt/app/bin/restart-mongod-server.sh"
            },
            "scale_out":{
               "nodes_to_execute_on":1,
               "order":2,
               "cmd":"/opt/app/bin/MongoTrib.py reconfig"
            },
            "scale_in":{
               "nodes_to_execute_on":1,
               "order":3,
               "cmd":"/opt/app/bin/MongoTrib.py reconfig"
            },
            "destroy":{
               "nodes_to_execute_on":1,
               "order":2,
               "cmd":"/opt/app/bin/MongoTrib.py reconfig"
            },
            "copy_log": {
                "type": "custom",
                "cmd": "chown caddy:svc /data/caddy/logs/;/opt/app/bin/MongoTrib.py copy_log && echo finish",
                "timeout": 1800,
                "service_params": {
                    "copy_log": {{service_params.copy_log}}
                }
            },
            "stop_caddy":{
                "type": "custom",
                "cmd": "systemctl stop caddy && echo finish",
                "timeout": 1800
            },
            "clean_log": {
                "type": "custom",
                "cmd": "/opt/app/bin/MongoTrib.py clean_log",
                "timeout": 1800
            },
            "upgrade": {
                "cmd": "/upgrade/upgrade.sh",
                "timeout": 86400
            },
            "get_nodes_order": {
               "event": ["upgrade", "scale_vertical"],
               "cmd": "if [ -f /upgrade/upgrade.sh ]; then cmd='/upgrade/upgrade.sh getOrder'; else cmd='/opt/app/bin/upgrade.sh getOrder'; fi; $cmd"
            },
            "rollback": {
                "cmd": "if [ -d /opt/app-3.6.8 ]; then if [ -d /opt/app ]; then /opt/app/bin/upgrade.sh doRollback; else mv /opt/app-3.6.8 /opt/app; fi; fi"
            },
            "changeFcv": {
               "type": "custom",
               "cmd": "/opt/app/bin/helper.sh changeFcv",
               "service_params": {
                  "fcv": {{service_params.fcv}}
               }
            }
         }
      }
   ],
   "env": {
      "user": {{env.user}},
      "passwd": {{env.passwd}},
      "zabbix.server.addr": {{env.zabbix.server.addr}},
      "zabbix.agent.port": {{env.zabbix.agent.port}},
      "zabbix.agent.enabled": {{env.zabbix.agent.enabled}},
      "caddy_user":{{env.caddy_user}},
      "caddy_password":{{env.caddy_password}},
      "maxConns": {{env.maxConns}},
      "oplogSize": {{env.oplogSize}},
      "port": {{env.port}},
      "cacheSizeUsage": {{env.cacheSizeUsage}}
   },
   "advanced_services": {
      "update_nodes_names": {
         "cmd": "/opt/app/bin/mongo-trib.py get_nodes_names",
         "timeout": 10
      }
   },
   "endpoints": {
      "mongod": {
         "port": {{env.port}},
         "protocol": "TCP"
      }
   },
   "health_check":{
      "enable": true,
      "interval_sec": 60,
      "timeout_sec": 30,
      "action_timeout_sec": 30,
      "healthy_threshold": 2,
      "unhealthy_threshold": 2,
      "check_cmd": "/opt/app/bin/MongoTrib.py health_check",
      "action_cmd": "/opt/app/bin/MongoTrib.py tackle"
   },
   "display_tabs": {
      "Node Details": {
         "cmd": "/opt/app/bin/MongoTrib.py get_node_details",
         "timeout": 10,
         "description": ""
      },
      "Connection String": {
         "cmd": "/opt/app/bin/MongoTrib.py print_connection_string",
         "timeout": 10,
         "description": ""
      },
      "FCV": {
         "cmd": "/opt/app/bin/helper.sh showFcv",
         "description": "Feature compatibility version, can be changed through 'changeFcv' menu, please refer to [official documents](https://docs.mongodb.com/v4.0/reference/command/setFeatureCompatibilityVersion/) to get more information.<br/>Caution1: if you use 4.0 features in your database configuration, you can't downgrade to fcv 3.6 anymore!<br/>Caution2: if you upgrade your cluster from 3.6 to current version, fcv remains 3.6. Please test your server&client thoroughly before changing fcv to 4.0!"
      }
   },
   "monitor":{
      "enable":true,
      "cmd":"/opt/app/bin/MongoTrib.py monitor",
      "items":{
         "opcounters-query":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcounters-update":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcountersRepl-query":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcounters-insert":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcounters-total":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcountersRepl-total":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcountersRepl-delete":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcountersRepl-insert":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcountersRepl-update":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "opcounters-delete":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "cache-usage":{
            "unit":"Pecent(%)",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":0.01
         },
         "wiredTiger-cache-tracked-dirty-pages-in-the-cache":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "wiredTiger-cache-bytes-read-into-cache":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "wiredTiger-cache-bytes-written-from-cache":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "wiredTiger-concurrentTransactions-write-out":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "wiredTiger-concurrentTransactions-write-available":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "wiredTiger-concurrentTransactions-read-out":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "wiredTiger-concurrentTransactions-read-available":{
            "unit":"times",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "network-physicalBytesOut":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "network-bytesIn":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1

         },
         "network-bytesOut":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "network-physicalBytesIn":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "network-physicalBytesOut":{
            "unit":"MB",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "globalLock-activeClients-writers":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "globalLock-activeClients-readers":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "globalLock-activeClients-total":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "globalLock-currentQueue-readers":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "globalLock-currentQueue-total":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "globalLock-currentQueue-writers":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "connections-current":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         },
         "connections-totalCreated":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"delta",
            "scale_factor_when_display":1
         },
         "connections-available":{
            "unit":"",
            "value_type":"int",
            "statistics_type":"latest",
            "scale_factor_when_display":1
         }

      },
      "groups":{
         "opcountersRepl":[
            "opcountersRepl-insert",
            "opcountersRepl-query",
            "opcountersRepl-update",
            "opcountersRepl-delete"
         ],
         "opcounters":[
            "opcounters-insert",
            "opcounters-query",
            "opcounters-update",
            "opcounters-delete"
         ],
         "wiredTiger-cache-usage":[
            "cache-usage"
         ],
         "wiredTiger-cache":[
            "wiredTiger-cache-tracked-dirty-pages-in-the-cache",
            "wiredTiger-cache-bytes-read-into-cache",
            "wiredTiger-cache-bytes-written-from-cache"
         ],
         "wiredTiger-concurrentTransactions":[
            "wiredTiger-concurrentTransactions-write-out",
            "wiredTiger-concurrentTransactions-write-available",
            "wiredTiger-concurrentTransactions-read-out",
            "wiredTiger-concurrentTransactions-read-available"
         ],
         "connections":[
            "connections-current",
            "connections-totalCreated",
            "connections-available"
         ],
         "globalLock-activeClients":[
            "globalLock-activeClients-writers",
            "globalLock-activeClients-readers",
            "globalLock-activeClients-total"
         ],
         "globalLock-currentQueue":[
            "globalLock-currentQueue-readers",
            "globalLock-currentQueue-total",
            "globalLock-currentQueue-writers"
         ],
         "network":[
            "network-bytesIn",
            "network-physicalBytesIn",
            "network-bytesOut",
            "network-physicalBytesOut"
         ]
      },
      "display":[
         "opcounters",
         "opcountersRepl",
         "connections",
         "wiredTiger-cache-usage",
         "wiredTiger-cache",
         "wiredTiger-concurrentTransactions",
         "globalLock-activeClients",
         "globalLock-currentQueue",
         "network"
      ],
      "alarm":[
         "connections-current",
         "connections-available",
         "cache-usage"
      ]
   }
}
